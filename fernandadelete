<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Omniintel Tecnologia</title>

    <!-- Metadados -->
    <meta name="description" content="OmniWebPages é uma plataforma que reúne e divulga os sites de empresas parceiras da Omniintel e clientes OmniScreen. Através deste portal, empresas que mantém contratos ativos com nossos serviços de mídia digital e desenvolvimento web ganham visibilidade adicional, criando uma rede de negócios integrada que potencializa resultados para todos os participantes.">
    <meta name="author" content="Entony Wisniewski">
    
    <!-- Favicon -->
    <link rel="icon" href="favicon.ico" type="image/x-icon">
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://www.omniintel.com.br">
    <meta property="og:title" content="Omniintel Tecnologia">
    <meta property="og:description" content="Soluções em tecnologia, sites, automação, manutenção e publicidade interativa. Inteligência e inovação a serviço da sua ideia.">
    <meta property="og:image" content="logo3d.jpeg">

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="Omniintel Tecnologia">
    <meta name="twitter:description" content="Criação de sites, automações, check-in Wi-Fi, publicidade em telas e muito mais. Descubra o que a Omniintel pode fazer por você.">
    <meta name="twitter:image" content="logo3d.jpeg">

    <!-- Recursos -->
    <link rel="canonical" href="https://www.omniintel.com.br/">
    <link rel="preload" href="/fonts/custom-font.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="stylesheet" href="style.css">
    <script src="script.js"></script>
     <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2"></script>
    <style>
.container-perfil {
  margin-top: 47px;
  position: relative;
}

.capa-wrapper {
  position: relative;
}

.img-capa {
  width: 100vw;
  aspect-ratio: 16 / 9;
  object-fit: cover;
  border-radius: 0;
  display: block;
  margin: 0 auto;
  max-width: 100%;
}

.perfil-direita {
  position: absolute;
  right: clamp(1rem, 4vw, 3rem);
  top: 75%;
  transform: translateY(-50%);
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  z-index: 3;
  transition: all 0.3s ease;
}

.perfil-sobreposto {
  width: clamp(100px, 15vw, 200px);
  height: clamp(100px, 15vw, 200px);
  border-radius: 50%;
  border: clamp(3px, 0.5vw, 6px) solid white;
  object-fit: cover;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
  transition: transform 0.3s ease;
}

.perfil-sobreposto:hover {
  transform: scale(1.05);
}

#perfilNome {
  margin-top: clamp(0.5rem, 1vw, 1.5rem);
  font-size: clamp(1.2rem, 2.5vw, 2.5rem);
  font-weight: bold;
  color: #fff;
  text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.6);
}

.btn-contato {
  background: linear-gradient(135deg, #25D366, #128C7E);
  color: white;
  border: none;
  padding: clamp(8px, 1.5vw, 15px) clamp(20px, 3vw, 35px);
  font-size: clamp(0.8rem, 1.2vw, 1.1rem);
  font-weight: bold;
  border-radius: 25px;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 4px 15px rgba(37, 211, 102, 0.3);
  margin-top: clamp(0.3rem, 1vw, 1rem);
}

.btn-contato:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(37, 211, 102, 0.4);
}

@media (min-width: 1440px) {
  .perfil-direita {
    right: 4rem;
    top: 80%;
  }
  
  .perfil-sobreposto {
    width: 180px;
    height: 180px;
  }
}

@media (max-width: 1024px) {
  .perfil-direita {
    top: 70%;
  }
}

@media (max-width: 768px) {
  .perfil-direita {
    top: 60%;
  }
}

@media (max-width: 480px) {
  .perfil-direita {
    top: 50%;
    right: 0.8rem;
  }
}



      .search-wrapper {
        margin-top: 16px;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 1rem;
        max-width: 1400px;
        padding: 0 2rem;
        margin-bottom: 2rem;
        width: 100%;
      }

      .search-title {
        font-size: clamp(1.2rem, 3vw, 2rem);
        font-weight: 600;
        background: linear-gradient(120deg, #00BFFF, #4A00E0, #8E2DE2);
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        text-align: center;
        text-transform: uppercase;
        letter-spacing: 1px;
        animation: glowEffect 8s ease-in-out infinite;
      }

      @media (max-width: 768px) {
        .search-title {
          font-size: clamp(1rem, 2.5vw, 1.5rem);
          letter-spacing: 0.5px;
        }
      }

      @media (max-width: 480px) {
        .search-title {
          font-size: clamp(0.9rem, 2vw, 1.2rem);
          letter-spacing: 0.3px;
        }
      }

      @keyframes glowEffect {
        0%, 100% {
          filter: drop-shadow(0 0 2px rgba(0,191,255,0.4));
        }
        50% {
          filter: drop-shadow(0 0 8px rgba(74,0,224,0.6));
        }
      }

      .search-bar {
        background: rgba(255, 255, 255, 0.15);
        backdrop-filter: blur(20px);
        -webkit-backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.25);
        border-radius: 50px;
        display: flex;
        align-items: center;
        gap: 10px;
        padding: 12px 24px;
        max-width: 500px;
        width: 100%;
        transition: all 0.3s ease;
      }

      .search-bar:focus-within {
        background: rgba(255, 255, 255, 0.2);
        box-shadow: 0 0 15px rgba(255,255,255,0.1);
      }

      .search-bar input {
        background: transparent;
        border: none;
        outline: none;
        color: white;
        font-size: 1rem;
        width: 100%;
      }

      .search-bar input::placeholder {
        color: rgba(255,255,255,0.7);
      }

      .tetris-row {
        display: flex;
        gap: 1rem;
        justify-content: center;
        flex-wrap: nowrap;
        width: 100%;
        margin-bottom: 2rem;
        overflow-x: hidden;
        -ms-overflow-style: none;  /* IE and Edge */
        scrollbar-width: none;  /* Firefox */      }

      @media (max-width: 768px) {
        .search-wrapper {
          margin-top: 12px;
          padding: 0 1rem;
        }

        .search-bar {
          padding: 10px 20px;
        }
      }

      .tetris-item {
        display: flex;
        flex-direction: column;
        background-color: #805757b6;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        transition: transform 0.3s ease;
      }

      .tetris-item:hover {
        transform: scale(1.03);
      }

      .tetris-item img {
        width: 100%;
        height: auto;
        object-fit: contain;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
      }

      .tetris-item h4 {
        text-align: center;
        font-size: 0.95rem;
        font-weight: 600;
        color: #fff;
        padding: 0.75rem;
        text-transform: lowercase;
      }
           .container-perfis {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 2rem;
  padding: 2rem;
  margin: 2rem auto 0;
  background: rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(10px);
  border-radius: 1rem;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  width: 100%;
  max-width: 1400px;
  height: auto;
  box-sizing: border-box;
  overflow-x: hidden; /* evita rolagem horizontal */
}

.titulo-container {
  width: 100%;
  text-align: center;
  margin-bottom: 2rem;
}

.titulo-container h3 {
  font-family: 'Helvetica Neue', Arial, sans-serif;
  font-size: clamp(1.8rem, 2.5vw, 3rem);
  font-weight: 700;
  background: linear-gradient(120deg, #4A00E0, #8E2DE2, #FF1493, #00BFFF);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  text-transform: uppercase;
  letter-spacing: 2px;
  text-shadow: 2px 2px 4px rgba(74,0,224,0.3), -2px -2px 4px rgba(255,20,147,0.3);
  animation: titleEffect 13s ease-in-out infinite;
}

@keyframes titleEffect {
  0% {
    opacity: 0.8;
    transform: scale(0.98);
  }
  50% {
    opacity: 1;
    transform: scale(1);
    text-shadow: 2px 2px 15px rgba(52, 152, 219, 0.3);
  }
  100% {
    opacity: 0.8;
    transform: scale(0.98);
  }
}

/* Container dos perfis (horizontal fixo) */
.perfis-container {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  flex-wrap: nowrap;
  width: 100%;
  gap: 2rem;
}

/* Cada perfil se ajusta proporcionalmente */
.perfil {
  display: flex;
  flex-direction: column;
  align-items: center;
  flex: 1;
  list-style: none;
  padding: 0.8rem;
  box-sizing: border-box;
  width: 100%;
}

.perfil img {
  width: clamp(80px, 15vw, 180px);
  height: clamp(80px, 15vw, 180px);
  border-radius: 50%;
  object-fit: cover;
}

.perfil .titulo {
  margin-top: 0.8rem;
  font-weight: bold;
  font-size: clamp(0.8rem, 1vw, 1.1rem);
  text-align: center;
  width: 100%;
}
    </style>
</head>
<body>
    <header class="cabeca">
        <div class="header-container">
            <button id="abremenu" class="menubotao">☰</button>
            <h1 class="tipage">OMNIINTEL</h1>
        </div>
        <div class="social-sidebar">
            <div class="social-icon instagram-icon">
                <a href="https://www.instagram.com/omniintel/" target="_blank">
                    <img src="iconeinstagram.png" alt="Instagram">
                </a>
            </div>
            <div class="social-icon whatsapp-icon">
                <a href="https://wa.me/message/47X2CV2HAJPOI1" target="_blank">
                    <img src="iconewhats.png" alt="WhatsApp">
                </a>
            </div>
        </div>
    </header>

    <nav id="enimenu" class="menulat">
        <ul>
            <li><a href="index.html">Início</a></li>
            <li><a href="indexscreen.html">OmniScreen</a></li>
            <li><a href="indexpages.html">OmniWebPages</a></li>
            <li><a href="indexdesigner.html">OmniDesigner</a></li>
            <li><a href="indexcontact.html">OmniContato</a></li>
        </ul>
        <div class="imagemenu">
            <img src="menuimagem.jpeg" alt="Imagem do menu">
        </div>
        <h6 class="direitos">Todos os direitos reservados</br> &copy; Omniintel 2025</h6>
        <h6 style="visibility: hidden;">-</h6> <!-- Evita sobreposição do botão em mobile -->
    </nav>

  <main>
    <section id="perfil-container" class="container-perfil">
      <div class="capa-wrapper">
        <img id="capaImagem" class="img-capa" src="" alt="Capa do perfil">
        <div class="perfil-direita">
          <img id="perfilImagem" class="perfil-sobreposto" src="" alt="Imagem de perfil">
          <h3 id="perfilNome">Carregando...</h3>
          <a id="botaoWhats" href="#" target="_blank">
            <button class="btn-contato">Iniciar Conversa</button>
          </a>
        </div>
      </div>
    </section>

    <div class="search-wrapper" id="searchWrapper">
      <h3 class="search-title" style="white-space: nowrap;">Encontre ideias e inspire-se.</h3>      <div class="search-bar">
        <input type="text" id="searchInput" placeholder="Pesquisar..."/>
      </div>
    </div>

    <div class="grid-tetris" id="conteudoPerfil"></div>

        <section class="container-perfis">
  <div class="titulo-container">
    <h3>DESIGNERS QUE INSPIRAM</h3>
  </div>
  <div class="perfis-container">
    <!-- Perfis gerados dinamicamente -->
  </div>
</section>
  </main>
    <section class="rodape-empresa">
        <h4>OMNIINTEL TECNOLOGIA LTDA</h4>
        <p>CNPJ: 61.587.884/0001-17</p>
        <p onclick="navigator.clipboard.writeText('5592000-5470')" style="text-decoration: underline; text-decoration-style: solid; text-decoration-color: #666; cursor: pointer;">Fone: (55) 92 000 - 5470</p>
        <p onclick="navigator.clipboard.writeText('contato@omniintel.com.br')" style="text-decoration: underline; text-decoration-style: solid; text-decoration-color: #666; cursor: pointer;">Email: contato@omniintel.com.br</p>
        <p>Endereço: Rua Três de Outubro, 581, Cruzeiro, Santa Rosa, RS</p>
        <p style="visibility: hidden;">-</p>
    </section>
</body>
  <script>
        // Supabase
    const supabaseUrl = 'https://hgxuakniyncpbuvksiql.supabase.co';
    const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhneHVha25peW5jcGJ1dmtzaXFsIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0ODcyNTA2MCwiZXhwIjoyMDY0MzAxMDYwfQ.PqFYkPC-87s3regeKRhfMsZi9t_at-LxQTP23RGOyEo';
    const supabase = window.supabase.createClient(supabaseUrl, supabaseKey);

document.addEventListener('DOMContentLoaded', async () => {
  await carregarPerfil();
  await carregarPerfis();
});

    async function carregarPerfis() {
      try {
        const { data, error } = await supabase
          .from('designerperfil')
          .select('*');

        if (error) throw error;

        const container = document.querySelector('.perfis-container');
        container.innerHTML += ''; // mantém o título fixo

        data.forEach(perfil => {
          container.innerHTML += `
            <ul class="perfil">
              <li><a href="${perfil.url}"><img src="${perfil.imagem_url}" alt="${perfil.titulo}"></a></li>
              <li class="titulo">${perfil.titulo}</li>
            </ul>`;
        });
      } catch (error) {
        console.error('Erro ao carregar perfis:', error);
      }
    }

async function carregarPerfil() {
  try {
    const { data, error } = await supabase
      .from('designerperfil')
      .select('titulo, capa_url, imagem_url, directw')
      .eq('id', 3)
      .limit(1);

    const perfil = data?.[0];

    if (error || !perfil) {
      console.error('Erro ao buscar perfil:', error);
      const nomeEl = document.getElementById('perfilNome');
      if (nomeEl) nomeEl.textContent = "Erro ao carregar perfil.";
      return;
    }

    // Atualiza os elementos no DOM
    const nomeEl = document.getElementById('perfilNome');
    const botaoEl = document.getElementById('botaoWhats');
    const perfilImgEl = document.getElementById('perfilImagem');
    const capaImgEl = document.getElementById('capaImagem');

    if (nomeEl) nomeEl.textContent = perfil.titulo || 'Sem nome';
    if (botaoEl) botaoEl.href = perfil.directw || "#";
    if (perfilImgEl) perfilImgEl.src = perfil.imagem_url || 'perfil.jpg';
    if (capaImgEl) capaImgEl.src = perfil.capa_url || 'capa.jpg';

  } catch (err) {
    console.error('Erro inesperado ao carregar perfil:', err);
    const nomeEl = document.getElementById('perfilNome');
    if (nomeEl) nomeEl.textContent = "Erro inesperado.";
  }
}


async function carregarTetris() {
  const container = document.getElementById('conteudoPerfil');
  const screenWidth = container.clientWidth;

  const { data, error } = await supabase.from('fernanda').select('imagem_url, titulo');
  if (error || !data?.length) {
    container.innerHTML = '<p style="text-align:center;">Nenhuma imagem encontrada.</p>';
    return;
  }

  const imagens = await Promise.all(
    data.map((item) =>
      new Promise((resolve) => {
        const img = new Image();
        img.src = item.imagem_url;
        img.onload = () => {
          resolve({
            url: item.imagem_url,
            titulo: item.titulo,
            width: img.naturalWidth,
            height: img.naturalHeight,
            ratio: img.naturalWidth / img.naturalHeight,
          });
        };
      })
    )
  );

  let row = [];
  let rowWidth = 0;
  const rowHeight = 250; // altura padrão de linha

  imagens.forEach((imgData, i) => {
    const widthAtRowHeight = imgData.ratio * rowHeight;
    row.push(imgData);
    rowWidth += widthAtRowHeight + 16; // 16 = gap estimado

    // Quando a soma da largura atingir ou ultrapassar a largura da tela
    if (rowWidth >= screenWidth || i === imagens.length - 1) {
      const scaleFactor = screenWidth / rowWidth;
      const rowEl = document.createElement('div');
      rowEl.classList.add('tetris-row');

      row.forEach((img) => {
        const newHeight = rowHeight * scaleFactor;
        const newWidth = newHeight * img.ratio;

        const itemEl = document.createElement('div');
        itemEl.classList.add('tetris-item');
        itemEl.style.width = `${newWidth}px`;

        itemEl.innerHTML = `
          <img src="${img.url}" alt="${img.titulo}">
          <h4>${img.titulo}</h4>
        `;
        rowEl.appendChild(itemEl);
      });

      container.appendChild(rowEl);
      row = [];
      rowWidth = 0;
    }
  });
}

function ajustarEspacamentoEntreLinhas() {
  const linhas = document.querySelectorAll('.tetris-row');

  linhas.forEach((linha) => {
    let alturaMax = 0;

    // Descobrir maior altura da linha
    const itens = linha.querySelectorAll('.tetris-item');
    itens.forEach((item) => {
      const altura = item.offsetHeight;
      if (altura > alturaMax) alturaMax = altura;
    });

    // Aplicar margem inferior para todos os itens da linha
    itens.forEach((item) => {
      item.style.marginBottom = '20px'; // margem mínima
      const diferenca = alturaMax - item.offsetHeight;
      item.style.marginBottom = `${20 + diferenca}px`; // ajusta conforme altura menor
    });
  });
}

// Esperar as imagens carregarem
window.addEventListener('load', ajustarEspacamentoEntreLinhas);
window.addEventListener('resize', ajustarEspacamentoEntreLinhas);

carregarTetris();



   </script>
</html>

